{"version":3,"file":"static/js/543.8b6a888e.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","utils/getBrowserLocation.js","components/OrderForm/initialState.js","webpack://react-homework-template/./src/components/GoogleMaps/GoogleMaps.module.css?a6ee","components/GoogleMaps/GoogleMaps.jsx","webpack://react-homework-template/./src/components/OrderForm/OrderForm.module.css?3a20","components/OrderForm/OrderForm.jsx","webpack://react-homework-template/./src/components/OrderList/OrderList.module.css?ca7d","components/Icons/CrossIcon.jsx","components/OrderList/OrderList.jsx","webpack://react-homework-template/./src/pages/ShoppingCartPage/ShoppingCartPage.module.css?012e","pages/ShoppingCartPage/ShoppingCartPage.jsx","redux/orders/ordersSelectors.js","webpack://react-homework-template/./src/shared/components/Input/Input.module.css?122e","shared/components/Input/Input.jsx","shared/hooks/useForm.jsx"],"sourcesContent":["import { Watch } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Watch\n      height=\"80\"\n      width=\"80\"\n      radius=\"48\"\n      color=\"#ff6347\"\n      ariaLabel=\"watch-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","const defaultCenter = {\n  lat: -3.745,\n  lng: -38.523,\n};\n\nexport const getBrowserlocation = () => {\n  return new Promise((resolve, reject) => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude: lat, longitude: lng } = position.coords;\n          resolve({ lat, lng });\n        },\n        () => {\n          reject(defaultCenter);\n        }\n      );\n    } else {\n      reject(defaultCenter);\n    }\n  });\n};\n","const initialState = {\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"GoogleMaps_container__5MOJM\"};","import React, { useRef, useCallback, useMemo } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\n\nimport styles from './GoogleMaps.module.css';\n\nconst containerStyle = {\n  width: '400px',\n  heigth: '400px',\n};\n\nconst GoogleMaps = ({ userLocation }) => {\n  //   const { isLoaded } = useLoadScript({\n  //     googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  //     libraries: ['places'],\n  //   });\n  const defLoc = useMemo(() => ({ lat: 43, lng: 50 }), []);\n  console.log(userLocation);\n  const mapRef = useRef(undefined);\n\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    mapRef.current = undefined;\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={defLoc}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        <Marker\n          position={userLocation}\n          draggable={false}\n          icon={{ url: 'images/shop.png' }}\n          label={{ text: 'Current shop' }}\n        />\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default GoogleMaps;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"OrderForm_button__YYeSI\",\"form\":\"OrderForm_form__mnAgW\"};","import { useState, useEffect } from 'react';\n\n// import { useJsApiLoader } from '@react-google-maps/api';\nimport { Autocomplete } from '@react-google-maps/api';\n\nimport useForm from 'shared/hooks/useForm';\nimport { getBrowserlocation } from 'utils/getBrowserLocation';\nimport initialState from './initialState';\nimport Input from 'shared/components/Input/Input';\nimport GoogleMaps from 'components/GoogleMaps/GoogleMaps';\n\nimport styles from './OrderForm.module.css';\n\nconst OrderForm = ({ onSubmit, listOfOrders, total }) => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [addressInp, setAddressInp] = useState('');\n\n  const { state, setState, handleChange } = useForm({\n    initialState,\n  });\n\n  const handleSubmit = (e, data) => {\n    e.preventDefault();\n    onSubmit(data);\n    setState({ ...initialState });\n  };\n\n  const currentShop = localStorage.getItem('shop');\n  const { email, name, phone } = state;\n\n  // const { isLoaded } = useJsApiLoader({\n  //   id: 'google-map-script',\n  //   googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  //   libraries: ['places'],\n  // });\n\n  const autocomleteOptions = {\n    componentRestrictions: { country: 'ua' },\n    language: 'uk',\n  };\n\n  const handleAutocompleteLoad = autocomplete => {\n    setAutocomplete(autocomplete);\n  };\n\n  const handlePlaceSelect = (autocomplete, setAddressInp, setUserLocation) => {\n    if (autocomplete) {\n      const place = autocomplete.getPlace();\n      if (place && place.geometry && place.geometry.location) {\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n\n        setAddressInp(place.formatted_address);\n\n        setUserLocation({ lat, lng });\n      }\n    }\n  };\n\n  useEffect(() => {\n    getBrowserlocation()\n      .then(currentLoc => {\n        setUserLocation(currentLoc);\n      })\n      .catch(defaultCenter => {\n        setUserLocation(defaultCenter);\n      });\n  }, []);\n\n  return (\n    <>\n      {/* {isLoaded ? <GoogleMaps center={userLocation} /> : <p>Loading maps...</p>} */}\n      <GoogleMaps userLocation={userLocation} />\n      <form\n        className={styles.form}\n        onSubmit={e => {\n          handleSubmit(e, {\n            ...state,\n            address: addressInp,\n            owner: email,\n            shop: currentShop,\n            goods: listOfOrders,\n            totalPrice: total,\n          });\n        }}\n      >\n        <Autocomplete\n          options={autocomleteOptions}\n          onLoad={handleAutocompleteLoad}\n          onPlaceChanged={() =>\n            handlePlaceSelect(autocomplete, setAddressInp, setUserLocation)\n          }\n        >\n          <Input\n            id=\"address\"\n            label=\"Your address\"\n            name=\"address\"\n            value={addressInp}\n            placeholder=\"your address\"\n            type=\"text\"\n            handleChange={handleChange}\n          />\n        </Autocomplete>\n        <Input\n          id=\"name\"\n          label=\"Your name\"\n          name=\"name\"\n          value={name}\n          placeholder=\"your name\"\n          type=\"text\"\n          handleChange={e => handleChange(e)}\n        />\n        <Input\n          id=\"email\"\n          label=\"Your email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"your email\"\n          type=\"email\"\n          handleChange={e => handleChange(e)}\n        />\n        <Input\n          id=\"phone\"\n          label=\"Your phone\"\n          name=\"phone\"\n          value={phone}\n          placeholder=\"your phone\"\n          type=\"tel\"\n          handleChange={handleChange}\n        />\n\n        <div className={styles.button}>\n          Total: {''} {total}\n        </div>\n        <button className={styles.button}>SUBMIT YOUR ORDER</button>\n      </form>\n    </>\n  );\n};\n\nexport default OrderForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"OrderList_img__TPr61\",\"desc\":\"OrderList_desc__RCLrB\",\"goodTitle\":\"OrderList_goodTitle__KQ6YM\",\"list\":\"OrderList_list__c7IU4\",\"input\":\"OrderList_input__KdChA\",\"totalPrice\":\"OrderList_totalPrice__tdns3\",\"delete\":\"OrderList_delete__2w8ll\"};","import * as React from 'react';\n\n// color = stroke\n\nfunction CrossIcon(props) {\n  return (\n    <svg\n      width={24}\n      height={24}\n      // fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M19 5L5 19M5 5l14 14\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport default CrossIcon;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  setQuantity,\n  setTotalPrice,\n  removeItem,\n} from 'redux/orders/ordersSlice';\nimport { orderedGoods } from 'redux/orders/ordersSelectors';\n\nimport styles from './OrderList.module.css';\nimport CrossIcon from '../Icons/CrossIcon';\n\nconst OrderList = () => {\n  const { goods } = useSelector(orderedGoods);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e, data) => {\n    localStorage.removeItem('orders');\n    dispatch(setQuantity({ quantity: Number(e.target.value), _id: data }));\n    localStorage.setItem('orders', JSON.stringify(goods));\n  };\n\n  const removeFromCart = data => {\n    dispatch(removeItem(data));\n  };\n\n  useEffect(() => {\n    if (goods.length !== 0) {\n      dispatch(\n        setTotalPrice(\n          goods\n            .map(item => Number(item.price) * Number(item.quantity))\n            .reduce((acc, item) => {\n              return acc + item;\n            }, 0)\n        )\n      );\n      return;\n    }\n    dispatch(setTotalPrice(0));\n  }, [dispatch, goods]);\n\n  const listOfOrders = goods.map(item => (\n    <li key={item._id}>\n      <img className={styles.img} src={item.url} alt=\"Food\" width=\"300\" />\n      <div className={styles.desc}>\n        <div>\n          <p className={styles.goodTitle}>{item.title}</p>\n          <p>Price: {item.price}</p>\n          <label>\n            Quantity:{' '}\n            <input\n              className={styles.input}\n              type=\"number\"\n              name=\"quantity\"\n              min=\"1\"\n              max=\"50\"\n              onChange={e => handleChange(e, item._id)}\n              value={item.quantity}\n              step=\"1\"\n            />\n          </label>\n          <p className={styles.totalPrice}>\n            Price for {item.quantity} products:{' '}\n            {item.quantity\n              ? Number(item.price) * Number(item.quantity)\n              : item.price}\n          </p>\n        </div>\n        <button\n          onClick={() => removeFromCart(item)}\n          type=\"button\"\n          className={styles.delete}\n        >\n          <CrossIcon />\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{listOfOrders}</ul>;\n};\n\nexport default OrderList;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ShoppingCartPage_content__IYoK+\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { LoadScript } from '@react-google-maps/api';\n\nimport OrderForm from 'components/OrderForm/OrderForm';\nimport OrderList from 'components/OrderList/OrderList';\n\nimport {\n  orderedGoods,\n  selectIsLoadingOrders,\n} from 'redux/orders/ordersSelectors';\nimport { createOrder } from 'redux/orders/ordersOperations';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport styles from './ShoppingCartPage.module.css';\n\nconst ShoppingCartPage = () => {\n  const goods = JSON.parse(localStorage.getItem('orders'))\n    ? JSON.parse(localStorage.getItem('orders'))\n    : [];\n  const dispatch = useDispatch();\n\n  const { totalPrice } = useSelector(orderedGoods);\n  const isLoading = useSelector(selectIsLoadingOrders);\n\n  const submitForm = data => {\n    dispatch(createOrder(data));\n  };\n\n  const mapKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const libraries = ['places'];\n\n  return (\n    <LoadScript googleMapsApiKey={mapKey} libraries={libraries}>\n      <div className={styles.content}>\n        <OrderForm\n          onSubmit={submitForm}\n          listOfOrders={goods}\n          total={totalPrice}\n        />\n        {isLoading ? <Loader /> : <OrderList />}\n      </div>\n    </LoadScript>\n  );\n};\n\nexport default ShoppingCartPage;\n","export const orderedGoods = ({ orders }) => orders.orders;\n\nexport const userOrders = ({ orders }) => orders.userOrders;\n\nexport const selectIsLoadingOrders = ({ orders }) => orders.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__2SVdu\",\"label\":\"Input_label__pfJzW\"};","import styles from './Input.module.css';\n\nconst Input = ({\n  label,\n  type,\n  name,\n  id,\n  placeholder,\n  title,\n  value,\n  handleChange,\n  ...props\n}) => {\n  return (\n    <>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        title={title}\n        value={value}\n        onChange={handleChange}\n        className={styles.input}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","defaultCenter","lat","lng","name","email","phone","address","containerStyle","heigth","userLocation","defLoc","useMemo","console","log","mapRef","useRef","undefined","onLoad","useCallback","map","current","onUnmount","className","styles","mapContainerStyle","center","zoom","position","draggable","icon","url","label","text","onSubmit","listOfOrders","total","useState","setUserLocation","autocomplete","setAutocomplete","addressInp","setAddressInp","useForm","initialState","state","setState","handleChange","handleSubmit","e","data","preventDefault","currentShop","localStorage","getItem","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","then","currentLoc","catch","owner","shop","goods","totalPrice","options","componentRestrictions","country","language","onPlaceChanged","place","getPlace","geometry","location","formatted_address","handlePlaceSelect","Input","id","value","placeholder","type","props","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","useSelector","orderedGoods","dispatch","useDispatch","length","setTotalPrice","item","Number","price","quantity","reduce","acc","src","alt","title","min","max","onChange","removeItem","setQuantity","target","_id","setItem","JSON","stringify","step","onClick","parse","isLoading","selectIsLoadingOrders","mapKey","process","REACT_APP_GOOGLE_MAPS_API_KEY","googleMapsApiKey","libraries","createOrder","orders","userOrders","htmlFor","prevState"],"sourceRoot":""}